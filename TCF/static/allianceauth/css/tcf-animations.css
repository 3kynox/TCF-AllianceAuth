/* TCF Animations - Animations et transitions */

/* === Animations de base === */
@keyframes tcfFadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes tcfSlideInLeft {
    from {
        opacity: 0;
        transform: translateX(-20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes tcfSlideInRight {
    from {
        opacity: 0;
        transform: translateX(20px);
    }
    to {
        opacity: 1;
        transform: translateX(0);
    }
}

@keyframes tcfPulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes tcfGlow {
    0% {
        box-shadow: 0 0 5px rgba(96, 139, 78, 0.5);
    }
    50% {
        box-shadow: 0 0 20px rgba(96, 139, 78, 0.8), 0 0 30px rgba(86, 182, 194, 0.6);
    }
    100% {
        box-shadow: 0 0 5px rgba(96, 139, 78, 0.5);
    }
}

@keyframes tcfScanline {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(100vh);
    }
}

/* === Classes d'animation === */
.tcf-fade-in {
    animation: tcfFadeIn 0.6s ease-out;
}

.tcf-slide-in-left {
    animation: tcfSlideInLeft 0.4s ease-out;
}

.tcf-slide-in-right {
    animation: tcfSlideInRight 0.4s ease-out;
}

.tcf-pulse {
    animation: tcfPulse 2s ease-in-out infinite;
}

.tcf-glow {
    animation: tcfGlow 3s ease-in-out infinite;
}

/* === Effet de chargement === */
.tcf-loading {
    position: relative;
    overflow: hidden;
}

.tcf-loading::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
        90deg,
        transparent,
        rgba(86, 182, 194, 0.2),
        transparent
    );
    animation: tcfLoading 1.5s linear infinite;
}

@keyframes tcfLoading {
    0% {
        left: -100%;
    }
    100% {
        left: 100%;
    }
}

/* === Effet hover pour les boutons === */
.tcf-btn-hover {
    position: relative;
    overflow: hidden;
    transition: all 0.3s ease;
}

.tcf-btn-hover::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
}

.tcf-btn-hover:hover::before {
    width: 300px;
    height: 300px;
}

/* === Effet de scanline (style sci-fi) === */
.tcf-scanline-container {
    position: relative;
    overflow: hidden;
}

.tcf-scanline-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 2px;
    background: linear-gradient(
        to bottom,
        transparent,
        rgba(86, 182, 194, 0.6),
        transparent
    );
    animation: tcfScanline 8s linear infinite;
    pointer-events: none;
}

/* === Transitions pour les éléments interactifs === */
.tcf-transition {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

.tcf-transition-fast {
    transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
}

.tcf-transition-slow {
    transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
}

/* === Effet de typing pour le texte === */
@keyframes tcfTyping {
    from {
        width: 0;
    }
}

@keyframes tcfBlink {
    50% {
        opacity: 0;
    }
}

.tcf-typing {
    overflow: hidden;
    white-space: nowrap;
    border-right: 2px solid var(--tcf-green-light);
    animation: 
        tcfTyping 3s steps(40, end),
        tcfBlink 0.75s step-end infinite;
}

/* === Indicateur d'activité === */
.tcf-activity-indicator {
    display: inline-block;
    width: 8px;
    height: 8px;
    border-radius: 50%;
    background: var(--tcf-green-light);
    position: relative;
}

.tcf-activity-indicator.active {
    animation: tcfPulse 1.5s ease-in-out infinite;
}

.tcf-activity-indicator.active::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 16px;
    height: 16px;
    border-radius: 50%;
    border: 1px solid var(--tcf-green-light);
    animation: tcfRadar 1.5s ease-out infinite;
}

@keyframes tcfRadar {
    0% {
        opacity: 1;
        transform: translate(-50%, -50%) scale(0);
    }
    100% {
        opacity: 0;
        transform: translate(-50%, -50%) scale(2);
    }
}

/* === Effet de hover pour les cartes === */
.tcf-card-hover {
    transition: all 0.3s ease;
    position: relative;
}

.tcf-card-hover::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(
        135deg,
        transparent,
        rgba(86, 182, 194, 0.1)
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
}

.tcf-card-hover:hover {
    transform: translateY(-4px);
    box-shadow: 0 8px 24px rgba(86, 182, 194, 0.2);
}

.tcf-card-hover:hover::before {
    opacity: 1;
}

/* === Animation de notification === */
@keyframes tcfNotificationSlide {
    0% {
        transform: translateX(400px);
        opacity: 0;
    }
    10% {
        transform: translateX(0);
        opacity: 1;
    }
    90% {
        transform: translateX(0);
        opacity: 1;
    }
    100% {
        transform: translateX(400px);
        opacity: 0;
    }
}

.tcf-notification {
    animation: tcfNotificationSlide 5s ease-in-out;
}

/* === Spinner de chargement personnalisé === */
.tcf-spinner {
    width: 40px;
    height: 40px;
    position: relative;
}

.tcf-spinner::before,
.tcf-spinner::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    border: 3px solid transparent;
}

.tcf-spinner::before {
    border-top-color: var(--tcf-green-primary);
    animation: tcfSpin 1s linear infinite;
}

.tcf-spinner::after {
    border-bottom-color: var(--tcf-cyan-primary);
    animation: tcfSpin 1.5s linear infinite reverse;
}

@keyframes tcfSpin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}
